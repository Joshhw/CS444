--script for running testio.lnx, using system 8
Any system above number 5 will work for this.

--First run "mtip -b 8 -f testio.lnx" in another window on ulab
--          ~d
--           Tutor> gdb
--           and let it hang there

Script started on Wed Sep  8 19:31:22 2004
warning: could not update utmp entry
u18(1)%	i386-gdb testio.lnx
GDB is free software and you are welcome to distribute copies of it
 under certain conditions; type "show copying" to see the conditions.
There is absolutely no warranty for GDB; type "show warranty" for details.
GDB 4.15.1 (sparc-sun-sunos4.1.3 --target i386-linuxaout), 
Copyright 1995 Free Software Foundation, Inc...
(gdb) tar rem /dev/remgdb8
Remote debugging using /dev/remgdb8
0x100100 in /groups/ulab/pcdev/lib/startup0.opc ()
(gdb) b main
Breakpoint 1 at 0x10034c: file testio.c, line 30.
(gdb) c
Continuing.

Breakpoint 1, main () at testio.c:30
30	  lib_console_dev = sys_get_console_dev();  /* SAPC support lib fn */
(gdb) l
25	{
26	  char buf[BUFLEN];
27	  int got, i, lib_console_dev, ldev;
28	
29	  /* Determine the SAPC's "console" device, the serial port for user i/o */
30	  lib_console_dev = sys_get_console_dev();  /* SAPC support lib fn */
31	  switch(lib_console_dev) {
32	  case COM1: ldev = TTY0;	/* convert to our dev #'s */
33	    break;
34	  case COM2: ldev = TTY1;
(gdb) 
35	    break;
36	  default: printf("Unknown console device\n");
37	    return 1;
38	  }
39	  kprintf("Running with device TTY%d\n",ldev);
40	  /* Now have a usable device to talk to with i/o package-- */
41	
42	  ioinit();  /* Initialize devices */
43	  kprintf("\nTrying simple write...\n");
44	  got = write(ldev,"hi!\n",4);
(gdb) b 43
Breakpoint 2 at 0x1003b2: file testio.c, line 43.
(gdb) c
Continuing.
Running with device TTY1    <---Note that kprintf output shows in the remgdb
                                window, but direct output to COM2 does not
	                        (CONSOLE output in the SAPC support library
				goes to both "console" (COM2) and remgdb,
				which uses COM1).  Be sure to end all kprintf's
                                with a newline to see them right away in gdb.


Breakpoint 2, main () at testio.c:43
43	  kprintf("\nTrying simple write...\n");
(gdb) n

Trying simple write...
44	  got = write(ldev,"hi!\n",4);
(gdb) n
45	  kprintf("write of 4 returned %d\n",got);
(gdb) n
write of 4 returned 4
46	  delay();  /* time for output to finish, once write-behind is working */
(gdb) n
<doing delay>
48	  kprintf("Trying longer write\n");
(gdb) n
Trying longer write
49	  got = write(ldev, "abcdefghi", 9);
(gdb) l
44	  got = write(ldev,"hi!\n",4);
45	  kprintf("write of 4 returned %d\n",got);
46	  delay();  /* time for output to finish, once write-behind is working */
47	
48	  kprintf("Trying longer write\n");
49	  got = write(ldev, "abcdefghi", 9);
50	  kprintf("write of 9 returned %d\n",got);
51	  delay();  /* time for output to finish, once write-behind is working */
52	
53	  for (i = 0; i < BUFLEN; i++)
(gdb)                                   <----<CR> to gdb to repeat command
54	      buf[i] = 'A'+ i/2;
55	  kprintf("\nTrying write of %d-char string...\n", BUFLEN);
56	  got = write(ldev, buf, BUFLEN);
57	  kprintf("\nwrite returned %d\n", got);
58	  delay();
59	
60	  kprintf("\nType some input to test typeahead while looping for delay...\n");
61	  delay();
62	  got = read(ldev, buf, 10);	/* should wait for all 10 chars, once fixed */
63	  kprintf("\nGot %d chars into buf. Trying write of buf...\n", got);
(gdb) b 61                             <--just before read
Breakpoint 3 at 0x1004b5: file testio.c, line 61.
(gdb) c
Continuing.
write of 9 returned 9
<doing delay>

Trying write of 80-char string...

write returned 80
<doing delay>

Type some input to test typeahead while looping for delay...

Breakpoint 3, main () at testio.c:61
61	  delay();                      <---stopped just before read
(gdb) b 63                              <-- set breakpoint just after read
Breakpoint 4 at 0x1004d1: file testio.c, line 63.
(gdb) c                                 <-- to fall into read
Continuing.
<doing delay>                <--now type something in the *other* window

Breakpoint 4, main () at testio.c:63
63	  kprintf("\nGot %d chars into buf. Trying write of buf...\n", got);
(gdb) n

Got 6 chars into buf. Trying write of buf...
64	  write(ldev, buf, got);
(gdb) n
66	  kprintf("\nTrying another read right away...\n");
(gdb) n

Trying another read right away...
67	  got = read(ldev, buf, 10);	/* should wait for input, once fixed */
(gdb) l
62	  got = read(ldev, buf, 10);	/* should wait for all 10 chars, once fixed */
63	  kprintf("\nGot %d chars into buf. Trying write of buf...\n", got);
64	  write(ldev, buf, got);
65	
66	  kprintf("\nTrying another read right away...\n");
67	  got = read(ldev, buf, 10);	/* should wait for input, once fixed */
68	  kprintf("\nGot %d chars on second read\n",got);
69	  if (got == 0) 
70	      kprintf("nothing in buffer\n");	/* expected result until fixed */
71	  else 
(gdb) 
72	      write(ldev, buf, got);	/* should write 10 chars once fixed */
73	
74	  kprintf("\n\nNow turning echo off--\n");
75	  control(ldev, ECHOCONTROL, 0);
76	  kprintf("\nType some input, note lack of echoes...\n");
77	  delay();
78	  got = read(ldev, buf, 20);
79	  kprintf("\nTrying write of buf...\n");
80	  write(ldev, buf, got);
81	  kprintf("\nAsked for 20 characters; got %d\n", got);
(gdb) b 81
Breakpoint 5 at 0x1005bb: file testio.c, line 81.
(gdb) c
Continuing.

Got 0 chars on second read
nothing in buffer


Now turning echo off--

Type some input, note lack of echoes...
<doing delay>             <---type in other window again here

Trying write of buf...

Breakpoint 5, main () at testio.c:81
81	  kprintf("\nAsked for 20 characters; got %d\n", got);
(gdb) n

Asked for 20 characters; got 3
82	  return 0;
(gdb) c
Continuing.
                         -- The following is the normal exit behavior
                         -- gdb hits a breakpoint it didn't itself set,
	                 -- and so complains about it.
                         -- The breakpoint is "int $3" in the startup module
                         -- that is executed after return from main.

Program received signal SIGTRAP, Trace/breakpoint trap.
startupc () at startup.c:4
startup.c:4: No such file or directory.
(gdb) q
The program is running.  Quit anyway (and kill it)? (y or n) y
u18(2)%	exit
script done on Wed Sep  8 19:39:30 2004
